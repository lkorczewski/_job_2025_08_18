version: "3.8"

services:
  app:
    container_name: symfony-app
    build:
      context: .
      dockerfile: docker/app/Dockerfile-app
    working_dir: /var/www/html
    volumes:
      - ./symfony:/var/www/html
    depends_on:
      - db
    networks:
      - symfony
    command: >
      sh -c "
        until php bin/console doctrine:query:sql 'SELECT 1' > /dev/null 2>&1; do
          sleep 2
        done &&
        bin/console doctrine:schema:create &&
        until php bin/console doctrine:query:sql 'SELECT 1' --env=test > /dev/null 2>&1; do
          sleep 2
        done &&
        bin/console doctrine:schema:create --env=test &&
        php-fpm
      "

  nginx:
    image: nginx:alpine
    container_name: symfony-nginx
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - symfony

  db:
    image: postgres:15
    container_name: symfony-db
    restart: always
    environment:
      POSTGRES_USER: symfony
      POSTGRES_PASSWORD: symfony
      POSTGRES_DB: symfony
    ports:
      - "5432:5432"
    networks:
      - symfony

  db_test:
    image: postgres:15
    container_name: symfony-db-test
    restart: always
    environment:
      POSTGRES_USER: symfony_test
      POSTGRES_PASSWORD: symfony_test
      POSTGRES_DB: symfony_test
    ports:
      - "5433:5432" # uwaga: inny port ni≈º db (5432)
    networks:
      - symfony

  composer:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile-composer
    container_name: symfony-composer
    working_dir: /var/www/html
    volumes:
      - ./symfony:/var/www/html
    networks:
      - symfony

networks:
  symfony:
